// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id                      Int       @id @default(autoincrement())
  google_user_id          String    @unique
  email                   String
  google_access_token     String?
  google_refresh_token    String?
  google_token_expires_at DateTime?
  preferences             Json?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  calendars  calendar[]
  task_lists task_list[]
}

model calendar {
  id                 Int    @id @default(autoincrement())
  user_id            Int
  google_calendar_id String @unique
  title              String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user   user             @relation(fields: [user_id], references: [id], onDelete: Cascade)
  events calendar_event[]
}

model calendar_event {
  id              Int      @id @default(autoincrement())
  calendar_id     Int
  google_event_id String   @unique
  ics_uid         String   @unique @default("unknown")
  title           String
  description     String?
  start_time      DateTime
  end_time        DateTime
  is_all_day      Boolean  @default(false)
  location        String?
  event_hash      String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  calendar calendar @relation(fields: [calendar_id], references: [id], onDelete: Cascade)

  @@index([calendar_id])
  @@index([ics_uid])
}

model task_list {
  id                  Int    @id @default(autoincrement())
  user_id             Int
  google_task_list_id String @unique
  title               String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user  user   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  tasks task[]
}

model task {
  id             Int       @id @default(autoincrement())
  task_list_id   Int
  google_task_id String    @unique
  ics_uid        String    @unique @default("unknown")
  title          String
  notes          String?
  due_date       DateTime?
  task_hash      String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  task_list task_list @relation(fields: [task_list_id], references: [id], onDelete: Cascade)

  @@index([task_list_id])
  @@index([ics_uid])
}
